import { HexString } from '@chainflip/utils/types';
import { z } from 'zod';
import { AssetAndChain, rpcResponse } from './parsers.cjs';

type Nullish<T> = T | null | undefined;
type WithHash<T> = {
    [K in keyof T]: T[K] extends unknown[] ? [...T[K], at?: Nullish<string>] : never;
};
type Chain = AssetAndChain['chain'];
type AssetSymbol = AssetAndChain['asset'];
type UncheckedAssetAndChain = {
    asset: AssetSymbol;
    chain: Chain;
};
type AdditionalOrder = {
    LimitOrder: {
        base_asset: UncheckedAssetAndChain;
        quote_asset: UncheckedAssetAndChain;
        side: 'buy' | 'sell';
        tick: number;
        sell_amount: `0x${string}`;
    };
};
type RpcRequest = WithHash<{
    broker_requestSwapDepositAddress: [
        sourceAsset: UncheckedAssetAndChain,
        destinationAsset: UncheckedAssetAndChain,
        destinationAddress: string,
        brokerCommission: number,
        ccmMetadata?: Nullish<{
            message: HexString;
            gas_budget: HexString;
        }>,
        boostFee?: Nullish<number>,
        affiliateFees?: Nullish<{
            account: string;
            bps: number;
        }[]>
    ];
    cf_account_info: [accountId: string];
    cf_environment: [];
    cf_supported_assets: [];
    cf_swapping_environment: [];
    cf_ingress_egress_environment: [];
    cf_funding_environment: [];
    cf_pool_orders: [
        fromAsset: UncheckedAssetAndChain,
        toAsset: UncheckedAssetAndChain,
        accountId?: Nullish<string>
    ];
    cf_pool_price_v2: [baseAssset: UncheckedAssetAndChain, quoteAsset: UncheckedAssetAndChain];
    cf_pools_environment: [];
    cf_swap_rate: [
        fromAsset: UncheckedAssetAndChain,
        toAsset: UncheckedAssetAndChain,
        amount: `0x${string}`
    ];
    cf_swap_rate_v2: [
        fromAsset: UncheckedAssetAndChain,
        toAsset: UncheckedAssetAndChain,
        amount: `0x${string}`,
        additionalOrders?: Nullish<AdditionalOrder[]>
    ];
    cf_boost_pools_depth: [];
    cf_boost_pool_details: [asset?: UncheckedAssetAndChain | null];
    cf_boost_pool_pending_fees: [asset?: UncheckedAssetAndChain | null];
    state_getMetadata: [];
    state_getRuntimeVersion: [];
}> & {
    chain_getBlockHash: [blockHeight?: number];
};
declare const rpcResult: {
    readonly broker_requestSwapDepositAddress: z.ZodObject<{
        address: z.ZodString;
        issued_block: z.ZodNumber;
        channel_id: z.ZodNumber;
        source_chain_expiry_block: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
        channel_opening_fee: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
    }, "strip", z.ZodTypeAny, {
        address: string;
        issued_block: number;
        channel_id: number;
        source_chain_expiry_block: bigint;
        channel_opening_fee: bigint;
    }, {
        address: string;
        issued_block: number;
        channel_id: number;
        source_chain_expiry_block: string | number;
        channel_opening_fee: string;
    }>;
    readonly cf_account_info: z.ZodUnion<[z.ZodObject<{
        role: z.ZodLiteral<"unregistered">;
        flip_balance: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
    }, "strip", z.ZodTypeAny, {
        role: "unregistered";
        flip_balance: bigint;
    }, {
        role: "unregistered";
        flip_balance: string | number;
    }>, z.ZodObject<{
        role: z.ZodLiteral<"broker">;
        flip_balance: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
        earned_fees: z.ZodObject<{
            Bitcoin: z.ZodObject<{
                BTC: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            }, "strip", z.ZodTypeAny, {
                BTC: bigint;
            }, {
                BTC: string | number;
            }>;
            Ethereum: z.ZodObject<{
                ETH: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                USDC: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                FLIP: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                USDT: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            }, {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            }>;
            Polkadot: z.ZodObject<{
                DOT: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            }, "strip", z.ZodTypeAny, {
                DOT: bigint;
            }, {
                DOT: string | number;
            }>;
            Arbitrum: z.ZodDefault<z.ZodObject<{
                ETH: z.ZodDefault<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                USDC: z.ZodDefault<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint;
                USDC: bigint;
            }, {
                ETH?: string | number | undefined;
                USDC?: string | number | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Polkadot: {
                DOT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
        }, {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Polkadot: {
                DOT: string | number;
            };
            Arbitrum?: {
                ETH?: string | number | undefined;
                USDC?: string | number | undefined;
            } | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        role: "broker";
        flip_balance: bigint;
        earned_fees: {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Polkadot: {
                DOT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
        };
    }, {
        role: "broker";
        flip_balance: string | number;
        earned_fees: {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Polkadot: {
                DOT: string | number;
            };
            Arbitrum?: {
                ETH?: string | number | undefined;
                USDC?: string | number | undefined;
            } | undefined;
        };
    }>, z.ZodObject<{
        role: z.ZodLiteral<"liquidity_provider">;
        balances: z.ZodObject<{
            Bitcoin: z.ZodObject<{
                BTC: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            }, "strip", z.ZodTypeAny, {
                BTC: bigint;
            }, {
                BTC: string | number;
            }>;
            Ethereum: z.ZodObject<{
                ETH: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                USDC: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                FLIP: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                USDT: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            }, {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            }>;
            Polkadot: z.ZodObject<{
                DOT: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            }, "strip", z.ZodTypeAny, {
                DOT: bigint;
            }, {
                DOT: string | number;
            }>;
            Arbitrum: z.ZodDefault<z.ZodObject<{
                ETH: z.ZodDefault<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                USDC: z.ZodDefault<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint;
                USDC: bigint;
            }, {
                ETH?: string | number | undefined;
                USDC?: string | number | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Polkadot: {
                DOT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
        }, {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Polkadot: {
                DOT: string | number;
            };
            Arbitrum?: {
                ETH?: string | number | undefined;
                USDC?: string | number | undefined;
            } | undefined;
        }>;
        refund_addresses: z.ZodObject<{
            Bitcoin: z.ZodNullable<z.ZodString>;
            Ethereum: z.ZodNullable<z.ZodString>;
            Polkadot: z.ZodNullable<z.ZodString>;
            Arbitrum: z.ZodDefault<z.ZodNullable<z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            Bitcoin: string | null;
            Ethereum: string | null;
            Polkadot: string | null;
            Arbitrum: string | null;
        }, {
            Bitcoin: string | null;
            Ethereum: string | null;
            Polkadot: string | null;
            Arbitrum?: string | null | undefined;
        }>;
        flip_balance: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
        earned_fees: z.ZodObject<{
            Bitcoin: z.ZodObject<{
                BTC: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            }, "strip", z.ZodTypeAny, {
                BTC: bigint;
            }, {
                BTC: string | number;
            }>;
            Ethereum: z.ZodObject<{
                ETH: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                USDC: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                FLIP: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                USDT: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            }, {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            }>;
            Polkadot: z.ZodObject<{
                DOT: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            }, "strip", z.ZodTypeAny, {
                DOT: bigint;
            }, {
                DOT: string | number;
            }>;
            Arbitrum: z.ZodDefault<z.ZodObject<{
                ETH: z.ZodDefault<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                USDC: z.ZodDefault<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint;
                USDC: bigint;
            }, {
                ETH?: string | number | undefined;
                USDC?: string | number | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Polkadot: {
                DOT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
        }, {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Polkadot: {
                DOT: string | number;
            };
            Arbitrum?: {
                ETH?: string | number | undefined;
                USDC?: string | number | undefined;
            } | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        role: "liquidity_provider";
        flip_balance: bigint;
        earned_fees: {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Polkadot: {
                DOT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
        };
        balances: {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Polkadot: {
                DOT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
        };
        refund_addresses: {
            Bitcoin: string | null;
            Ethereum: string | null;
            Polkadot: string | null;
            Arbitrum: string | null;
        };
    }, {
        role: "liquidity_provider";
        flip_balance: string | number;
        earned_fees: {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Polkadot: {
                DOT: string | number;
            };
            Arbitrum?: {
                ETH?: string | number | undefined;
                USDC?: string | number | undefined;
            } | undefined;
        };
        balances: {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Polkadot: {
                DOT: string | number;
            };
            Arbitrum?: {
                ETH?: string | number | undefined;
                USDC?: string | number | undefined;
            } | undefined;
        };
        refund_addresses: {
            Bitcoin: string | null;
            Ethereum: string | null;
            Polkadot: string | null;
            Arbitrum?: string | null | undefined;
        };
    }>, z.ZodObject<{
        role: z.ZodLiteral<"validator">;
        flip_balance: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
        bond: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
        last_heartbeat: z.ZodNumber;
        reputation_points: z.ZodNumber;
        keyholder_epochs: z.ZodArray<z.ZodNumber, "many">;
        is_current_authority: z.ZodBoolean;
        is_current_backup: z.ZodBoolean;
        is_qualified: z.ZodBoolean;
        is_online: z.ZodBoolean;
        is_bidding: z.ZodBoolean;
        bound_redeem_address: z.ZodNullable<z.ZodEffects<z.ZodString, `0x${string}`, string>>;
        apy_bp: z.ZodNullable<z.ZodNumber>;
        restricted_balances: z.ZodRecord<z.ZodEffects<z.ZodString, `0x${string}`, string>, z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
    }, "strip", z.ZodTypeAny, {
        role: "validator";
        flip_balance: bigint;
        bond: bigint;
        last_heartbeat: number;
        reputation_points: number;
        keyholder_epochs: number[];
        is_current_authority: boolean;
        is_current_backup: boolean;
        is_qualified: boolean;
        is_online: boolean;
        is_bidding: boolean;
        bound_redeem_address: `0x${string}` | null;
        apy_bp: number | null;
        restricted_balances: Partial<Record<`0x${string}`, bigint>>;
    }, {
        role: "validator";
        flip_balance: string | number;
        bond: string | number;
        last_heartbeat: number;
        reputation_points: number;
        keyholder_epochs: number[];
        is_current_authority: boolean;
        is_current_backup: boolean;
        is_qualified: boolean;
        is_online: boolean;
        is_bidding: boolean;
        bound_redeem_address: string | null;
        apy_bp: number | null;
        restricted_balances: Record<string, string | number>;
    }>]>;
    readonly cf_boost_pools_depth: z.ZodArray<z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>]>, z.ZodObject<{
        tier: z.ZodNumber;
        available_amount: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
    }, "strip", z.ZodTypeAny, {
        tier: number;
        available_amount: bigint;
    }, {
        tier: number;
        available_amount: string;
    }>>, "many">;
    readonly cf_environment: z.ZodObject<{
        ingress_egress: z.ZodEffects<z.ZodObject<{
            minimum_deposit_amounts: z.ZodObject<{
                Bitcoin: z.ZodObject<{
                    BTC: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                }, "strip", z.ZodTypeAny, {
                    BTC: bigint;
                }, {
                    BTC: string | number;
                }>;
                Ethereum: z.ZodObject<{
                    ETH: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                    USDC: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                    FLIP: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                    USDT: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                }, "strip", z.ZodTypeAny, {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                }, {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                }>;
                Polkadot: z.ZodObject<{
                    DOT: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                }, "strip", z.ZodTypeAny, {
                    DOT: bigint;
                }, {
                    DOT: string | number;
                }>;
                Arbitrum: z.ZodDefault<z.ZodObject<{
                    ETH: z.ZodDefault<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                    USDC: z.ZodDefault<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                }, "strip", z.ZodTypeAny, {
                    ETH: bigint;
                    USDC: bigint;
                }, {
                    ETH?: string | number | undefined;
                    USDC?: string | number | undefined;
                }>>;
            }, "strip", z.ZodTypeAny, {
                Bitcoin: {
                    BTC: bigint;
                };
                Ethereum: {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                };
                Polkadot: {
                    DOT: bigint;
                };
                Arbitrum: {
                    ETH: bigint;
                    USDC: bigint;
                };
            }, {
                Bitcoin: {
                    BTC: string | number;
                };
                Ethereum: {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                };
                Polkadot: {
                    DOT: string | number;
                };
                Arbitrum?: {
                    ETH?: string | number | undefined;
                    USDC?: string | number | undefined;
                } | undefined;
            }>;
            ingress_fees: z.ZodObject<{
                Bitcoin: z.ZodObject<{
                    BTC: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                }, "strip", z.ZodTypeAny, {
                    BTC: bigint | null;
                }, {
                    BTC: string | number | null;
                }>;
                Ethereum: z.ZodObject<{
                    ETH: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                    USDC: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                    FLIP: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                    USDT: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                }, "strip", z.ZodTypeAny, {
                    ETH: bigint | null;
                    USDC: bigint | null;
                    FLIP: bigint | null;
                    USDT: bigint | null;
                }, {
                    ETH: string | number | null;
                    USDC: string | number | null;
                    FLIP: string | number | null;
                    USDT: string | number | null;
                }>;
                Polkadot: z.ZodObject<{
                    DOT: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                }, "strip", z.ZodTypeAny, {
                    DOT: bigint | null;
                }, {
                    DOT: string | number | null;
                }>;
                Arbitrum: z.ZodDefault<z.ZodObject<{
                    ETH: z.ZodDefault<z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>>;
                    USDC: z.ZodDefault<z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>>;
                }, "strip", z.ZodTypeAny, {
                    ETH: bigint | null;
                    USDC: bigint | null;
                }, {
                    ETH?: string | number | null | undefined;
                    USDC?: string | number | null | undefined;
                }>>;
            }, "strip", z.ZodTypeAny, {
                Bitcoin: {
                    BTC: bigint | null;
                };
                Ethereum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                    FLIP: bigint | null;
                    USDT: bigint | null;
                };
                Polkadot: {
                    DOT: bigint | null;
                };
                Arbitrum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                };
            }, {
                Bitcoin: {
                    BTC: string | number | null;
                };
                Ethereum: {
                    ETH: string | number | null;
                    USDC: string | number | null;
                    FLIP: string | number | null;
                    USDT: string | number | null;
                };
                Polkadot: {
                    DOT: string | number | null;
                };
                Arbitrum?: {
                    ETH?: string | number | null | undefined;
                    USDC?: string | number | null | undefined;
                } | undefined;
            }>;
            egress_fees: z.ZodObject<{
                Bitcoin: z.ZodObject<{
                    BTC: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                }, "strip", z.ZodTypeAny, {
                    BTC: bigint | null;
                }, {
                    BTC: string | number | null;
                }>;
                Ethereum: z.ZodObject<{
                    ETH: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                    USDC: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                    FLIP: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                    USDT: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                }, "strip", z.ZodTypeAny, {
                    ETH: bigint | null;
                    USDC: bigint | null;
                    FLIP: bigint | null;
                    USDT: bigint | null;
                }, {
                    ETH: string | number | null;
                    USDC: string | number | null;
                    FLIP: string | number | null;
                    USDT: string | number | null;
                }>;
                Polkadot: z.ZodObject<{
                    DOT: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                }, "strip", z.ZodTypeAny, {
                    DOT: bigint | null;
                }, {
                    DOT: string | number | null;
                }>;
                Arbitrum: z.ZodDefault<z.ZodObject<{
                    ETH: z.ZodDefault<z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>>;
                    USDC: z.ZodDefault<z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>>;
                }, "strip", z.ZodTypeAny, {
                    ETH: bigint | null;
                    USDC: bigint | null;
                }, {
                    ETH?: string | number | null | undefined;
                    USDC?: string | number | null | undefined;
                }>>;
            }, "strip", z.ZodTypeAny, {
                Bitcoin: {
                    BTC: bigint | null;
                };
                Ethereum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                    FLIP: bigint | null;
                    USDT: bigint | null;
                };
                Polkadot: {
                    DOT: bigint | null;
                };
                Arbitrum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                };
            }, {
                Bitcoin: {
                    BTC: string | number | null;
                };
                Ethereum: {
                    ETH: string | number | null;
                    USDC: string | number | null;
                    FLIP: string | number | null;
                    USDT: string | number | null;
                };
                Polkadot: {
                    DOT: string | number | null;
                };
                Arbitrum?: {
                    ETH?: string | number | null | undefined;
                    USDC?: string | number | null | undefined;
                } | undefined;
            }>;
            witness_safety_margins: z.ZodObject<{
                Bitcoin: z.ZodNullable<z.ZodNumber>;
                Ethereum: z.ZodNullable<z.ZodNumber>;
                Polkadot: z.ZodNullable<z.ZodNumber>;
                Arbitrum: z.ZodDefault<z.ZodNullable<z.ZodNumber>>;
            }, "strip", z.ZodTypeAny, {
                Bitcoin: number | null;
                Ethereum: number | null;
                Polkadot: number | null;
                Arbitrum: number | null;
            }, {
                Bitcoin: number | null;
                Ethereum: number | null;
                Polkadot: number | null;
                Arbitrum?: number | null | undefined;
            }>;
            egress_dust_limits: z.ZodObject<{
                Bitcoin: z.ZodObject<{
                    BTC: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                }, "strip", z.ZodTypeAny, {
                    BTC: bigint;
                }, {
                    BTC: string | number;
                }>;
                Ethereum: z.ZodObject<{
                    ETH: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                    USDC: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                    FLIP: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                    USDT: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                }, "strip", z.ZodTypeAny, {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                }, {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                }>;
                Polkadot: z.ZodObject<{
                    DOT: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                }, "strip", z.ZodTypeAny, {
                    DOT: bigint;
                }, {
                    DOT: string | number;
                }>;
                Arbitrum: z.ZodDefault<z.ZodObject<{
                    ETH: z.ZodDefault<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                    USDC: z.ZodDefault<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                }, "strip", z.ZodTypeAny, {
                    ETH: bigint;
                    USDC: bigint;
                }, {
                    ETH?: string | number | undefined;
                    USDC?: string | number | undefined;
                }>>;
            }, "strip", z.ZodTypeAny, {
                Bitcoin: {
                    BTC: bigint;
                };
                Ethereum: {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                };
                Polkadot: {
                    DOT: bigint;
                };
                Arbitrum: {
                    ETH: bigint;
                    USDC: bigint;
                };
            }, {
                Bitcoin: {
                    BTC: string | number;
                };
                Ethereum: {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                };
                Polkadot: {
                    DOT: string | number;
                };
                Arbitrum?: {
                    ETH?: string | number | undefined;
                    USDC?: string | number | undefined;
                } | undefined;
            }>;
            channel_opening_fees: z.ZodObject<{
                Bitcoin: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                Ethereum: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                Polkadot: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                Arbitrum: z.ZodDefault<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
            }, "strip", z.ZodTypeAny, {
                Bitcoin: bigint;
                Ethereum: bigint;
                Polkadot: bigint;
                Arbitrum: bigint;
            }, {
                Bitcoin: string | number;
                Ethereum: string | number;
                Polkadot: string | number;
                Arbitrum?: string | number | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            minimum_deposit_amounts: {
                Bitcoin: {
                    BTC: bigint;
                };
                Ethereum: {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                };
                Polkadot: {
                    DOT: bigint;
                };
                Arbitrum: {
                    ETH: bigint;
                    USDC: bigint;
                };
            };
            ingress_fees: {
                Bitcoin: {
                    BTC: bigint | null;
                };
                Ethereum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                    FLIP: bigint | null;
                    USDT: bigint | null;
                };
                Polkadot: {
                    DOT: bigint | null;
                };
                Arbitrum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                };
            };
            egress_fees: {
                Bitcoin: {
                    BTC: bigint | null;
                };
                Ethereum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                    FLIP: bigint | null;
                    USDT: bigint | null;
                };
                Polkadot: {
                    DOT: bigint | null;
                };
                Arbitrum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                };
            };
            witness_safety_margins: {
                Bitcoin: number | null;
                Ethereum: number | null;
                Polkadot: number | null;
                Arbitrum: number | null;
            };
            egress_dust_limits: {
                Bitcoin: {
                    BTC: bigint;
                };
                Ethereum: {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                };
                Polkadot: {
                    DOT: bigint;
                };
                Arbitrum: {
                    ETH: bigint;
                    USDC: bigint;
                };
            };
            channel_opening_fees: {
                Bitcoin: bigint;
                Ethereum: bigint;
                Polkadot: bigint;
                Arbitrum: bigint;
            };
        }, {
            minimum_deposit_amounts: {
                Bitcoin: {
                    BTC: string | number;
                };
                Ethereum: {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                };
                Polkadot: {
                    DOT: string | number;
                };
                Arbitrum?: {
                    ETH?: string | number | undefined;
                    USDC?: string | number | undefined;
                } | undefined;
            };
            ingress_fees: {
                Bitcoin: {
                    BTC: string | number | null;
                };
                Ethereum: {
                    ETH: string | number | null;
                    USDC: string | number | null;
                    FLIP: string | number | null;
                    USDT: string | number | null;
                };
                Polkadot: {
                    DOT: string | number | null;
                };
                Arbitrum?: {
                    ETH?: string | number | null | undefined;
                    USDC?: string | number | null | undefined;
                } | undefined;
            };
            egress_fees: {
                Bitcoin: {
                    BTC: string | number | null;
                };
                Ethereum: {
                    ETH: string | number | null;
                    USDC: string | number | null;
                    FLIP: string | number | null;
                    USDT: string | number | null;
                };
                Polkadot: {
                    DOT: string | number | null;
                };
                Arbitrum?: {
                    ETH?: string | number | null | undefined;
                    USDC?: string | number | null | undefined;
                } | undefined;
            };
            witness_safety_margins: {
                Bitcoin: number | null;
                Ethereum: number | null;
                Polkadot: number | null;
                Arbitrum?: number | null | undefined;
            };
            egress_dust_limits: {
                Bitcoin: {
                    BTC: string | number;
                };
                Ethereum: {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                };
                Polkadot: {
                    DOT: string | number;
                };
                Arbitrum?: {
                    ETH?: string | number | undefined;
                    USDC?: string | number | undefined;
                } | undefined;
            };
            channel_opening_fees: {
                Bitcoin: string | number;
                Ethereum: string | number;
                Polkadot: string | number;
                Arbitrum?: string | number | undefined;
            };
        }>, Omit<{
            minimum_deposit_amounts: {
                Bitcoin: {
                    BTC: bigint;
                };
                Ethereum: {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                };
                Polkadot: {
                    DOT: bigint;
                };
                Arbitrum: {
                    ETH: bigint;
                    USDC: bigint;
                };
            };
            ingress_fees: {
                Bitcoin: {
                    BTC: bigint | null;
                };
                Ethereum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                    FLIP: bigint | null;
                    USDT: bigint | null;
                };
                Polkadot: {
                    DOT: bigint | null;
                };
                Arbitrum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                };
            };
            egress_fees: {
                Bitcoin: {
                    BTC: bigint | null;
                };
                Ethereum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                    FLIP: bigint | null;
                    USDT: bigint | null;
                };
                Polkadot: {
                    DOT: bigint | null;
                };
                Arbitrum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                };
            };
            witness_safety_margins: {
                Bitcoin: number | null;
                Ethereum: number | null;
                Polkadot: number | null;
                Arbitrum: number | null;
            };
            egress_dust_limits: {
                Bitcoin: {
                    BTC: bigint;
                };
                Ethereum: {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                };
                Polkadot: {
                    DOT: bigint;
                };
                Arbitrum: {
                    ETH: bigint;
                    USDC: bigint;
                };
            };
            channel_opening_fees: {
                Bitcoin: bigint;
                Ethereum: bigint;
                Polkadot: bigint;
                Arbitrum: bigint;
            };
        }, "egress_dust_limits"> & {
            readonly minimum_egress_amounts: {
                Bitcoin: {
                    BTC: bigint;
                };
                Ethereum: {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                };
                Polkadot: {
                    DOT: bigint;
                };
                Arbitrum: {
                    ETH: bigint;
                    USDC: bigint;
                };
            };
        }, {
            minimum_deposit_amounts: {
                Bitcoin: {
                    BTC: string | number;
                };
                Ethereum: {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                };
                Polkadot: {
                    DOT: string | number;
                };
                Arbitrum?: {
                    ETH?: string | number | undefined;
                    USDC?: string | number | undefined;
                } | undefined;
            };
            ingress_fees: {
                Bitcoin: {
                    BTC: string | number | null;
                };
                Ethereum: {
                    ETH: string | number | null;
                    USDC: string | number | null;
                    FLIP: string | number | null;
                    USDT: string | number | null;
                };
                Polkadot: {
                    DOT: string | number | null;
                };
                Arbitrum?: {
                    ETH?: string | number | null | undefined;
                    USDC?: string | number | null | undefined;
                } | undefined;
            };
            egress_fees: {
                Bitcoin: {
                    BTC: string | number | null;
                };
                Ethereum: {
                    ETH: string | number | null;
                    USDC: string | number | null;
                    FLIP: string | number | null;
                    USDT: string | number | null;
                };
                Polkadot: {
                    DOT: string | number | null;
                };
                Arbitrum?: {
                    ETH?: string | number | null | undefined;
                    USDC?: string | number | null | undefined;
                } | undefined;
            };
            witness_safety_margins: {
                Bitcoin: number | null;
                Ethereum: number | null;
                Polkadot: number | null;
                Arbitrum?: number | null | undefined;
            };
            egress_dust_limits: {
                Bitcoin: {
                    BTC: string | number;
                };
                Ethereum: {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                };
                Polkadot: {
                    DOT: string | number;
                };
                Arbitrum?: {
                    ETH?: string | number | undefined;
                    USDC?: string | number | undefined;
                } | undefined;
            };
            channel_opening_fees: {
                Bitcoin: string | number;
                Ethereum: string | number;
                Polkadot: string | number;
                Arbitrum?: string | number | undefined;
            };
        }>;
        swapping: z.ZodObject<{
            maximum_swap_amounts: z.ZodObject<{
                Bitcoin: z.ZodObject<{
                    BTC: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                }, "strip", z.ZodTypeAny, {
                    BTC: bigint | null;
                }, {
                    BTC: string | number | null;
                }>;
                Ethereum: z.ZodObject<{
                    ETH: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                    USDC: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                    FLIP: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                    USDT: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                }, "strip", z.ZodTypeAny, {
                    ETH: bigint | null;
                    USDC: bigint | null;
                    FLIP: bigint | null;
                    USDT: bigint | null;
                }, {
                    ETH: string | number | null;
                    USDC: string | number | null;
                    FLIP: string | number | null;
                    USDT: string | number | null;
                }>;
                Polkadot: z.ZodObject<{
                    DOT: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                }, "strip", z.ZodTypeAny, {
                    DOT: bigint | null;
                }, {
                    DOT: string | number | null;
                }>;
                Arbitrum: z.ZodDefault<z.ZodObject<{
                    ETH: z.ZodDefault<z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>>;
                    USDC: z.ZodDefault<z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>>;
                }, "strip", z.ZodTypeAny, {
                    ETH: bigint | null;
                    USDC: bigint | null;
                }, {
                    ETH?: string | number | null | undefined;
                    USDC?: string | number | null | undefined;
                }>>;
            }, "strip", z.ZodTypeAny, {
                Bitcoin: {
                    BTC: bigint | null;
                };
                Ethereum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                    FLIP: bigint | null;
                    USDT: bigint | null;
                };
                Polkadot: {
                    DOT: bigint | null;
                };
                Arbitrum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                };
            }, {
                Bitcoin: {
                    BTC: string | number | null;
                };
                Ethereum: {
                    ETH: string | number | null;
                    USDC: string | number | null;
                    FLIP: string | number | null;
                    USDT: string | number | null;
                };
                Polkadot: {
                    DOT: string | number | null;
                };
                Arbitrum?: {
                    ETH?: string | number | null | undefined;
                    USDC?: string | number | null | undefined;
                } | undefined;
            }>;
            network_fee_hundredth_pips: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            maximum_swap_amounts: {
                Bitcoin: {
                    BTC: bigint | null;
                };
                Ethereum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                    FLIP: bigint | null;
                    USDT: bigint | null;
                };
                Polkadot: {
                    DOT: bigint | null;
                };
                Arbitrum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                };
            };
            network_fee_hundredth_pips: number;
        }, {
            maximum_swap_amounts: {
                Bitcoin: {
                    BTC: string | number | null;
                };
                Ethereum: {
                    ETH: string | number | null;
                    USDC: string | number | null;
                    FLIP: string | number | null;
                    USDT: string | number | null;
                };
                Polkadot: {
                    DOT: string | number | null;
                };
                Arbitrum?: {
                    ETH?: string | number | null | undefined;
                    USDC?: string | number | null | undefined;
                } | undefined;
            };
            network_fee_hundredth_pips: number;
        }>;
        funding: z.ZodObject<{
            redemption_tax: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            minimum_funding_amount: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
        }, "strip", z.ZodTypeAny, {
            redemption_tax: bigint;
            minimum_funding_amount: bigint;
        }, {
            redemption_tax: string | number;
            minimum_funding_amount: string | number;
        }>;
        pools: z.ZodObject<{
            fees: z.ZodObject<{
                Bitcoin: z.ZodObject<{
                    BTC: z.ZodObject<{
                        limit_order_fee_hundredth_pips: z.ZodNumber;
                        range_order_fee_hundredth_pips: z.ZodNumber;
                        range_order_total_fees_earned: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        limit_order_total_fees_earned: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        range_total_swap_inputs: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        limit_total_swap_inputs: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        quote_asset: z.ZodObject<{
                            chain: z.ZodLiteral<"Ethereum">;
                            asset: z.ZodLiteral<"USDC">;
                        }, "strip", z.ZodTypeAny, {
                            chain: "Ethereum";
                            asset: "USDC";
                        }, {
                            chain: "Ethereum";
                            asset: "USDC";
                        }>;
                    }, "strip", z.ZodTypeAny, {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    }, {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    }>;
                }, "strip", z.ZodTypeAny, {
                    BTC: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                }, {
                    BTC: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                }>;
                Ethereum: z.ZodObject<{
                    ETH: z.ZodObject<{
                        limit_order_fee_hundredth_pips: z.ZodNumber;
                        range_order_fee_hundredth_pips: z.ZodNumber;
                        range_order_total_fees_earned: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        limit_order_total_fees_earned: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        range_total_swap_inputs: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        limit_total_swap_inputs: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        quote_asset: z.ZodObject<{
                            chain: z.ZodLiteral<"Ethereum">;
                            asset: z.ZodLiteral<"USDC">;
                        }, "strip", z.ZodTypeAny, {
                            chain: "Ethereum";
                            asset: "USDC";
                        }, {
                            chain: "Ethereum";
                            asset: "USDC";
                        }>;
                    }, "strip", z.ZodTypeAny, {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    }, {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    }>;
                    FLIP: z.ZodObject<{
                        limit_order_fee_hundredth_pips: z.ZodNumber;
                        range_order_fee_hundredth_pips: z.ZodNumber;
                        range_order_total_fees_earned: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        limit_order_total_fees_earned: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        range_total_swap_inputs: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        limit_total_swap_inputs: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        quote_asset: z.ZodObject<{
                            chain: z.ZodLiteral<"Ethereum">;
                            asset: z.ZodLiteral<"USDC">;
                        }, "strip", z.ZodTypeAny, {
                            chain: "Ethereum";
                            asset: "USDC";
                        }, {
                            chain: "Ethereum";
                            asset: "USDC";
                        }>;
                    }, "strip", z.ZodTypeAny, {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    }, {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    }>;
                    USDT: z.ZodObject<{
                        limit_order_fee_hundredth_pips: z.ZodNumber;
                        range_order_fee_hundredth_pips: z.ZodNumber;
                        range_order_total_fees_earned: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        limit_order_total_fees_earned: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        range_total_swap_inputs: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        limit_total_swap_inputs: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        quote_asset: z.ZodObject<{
                            chain: z.ZodLiteral<"Ethereum">;
                            asset: z.ZodLiteral<"USDC">;
                        }, "strip", z.ZodTypeAny, {
                            chain: "Ethereum";
                            asset: "USDC";
                        }, {
                            chain: "Ethereum";
                            asset: "USDC";
                        }>;
                    }, "strip", z.ZodTypeAny, {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    }, {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    }>;
                }, "strip", z.ZodTypeAny, {
                    ETH: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    FLIP: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    USDT: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                }, {
                    ETH: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    FLIP: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    USDT: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                }>;
                Polkadot: z.ZodObject<{
                    DOT: z.ZodObject<{
                        limit_order_fee_hundredth_pips: z.ZodNumber;
                        range_order_fee_hundredth_pips: z.ZodNumber;
                        range_order_total_fees_earned: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        limit_order_total_fees_earned: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        range_total_swap_inputs: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        limit_total_swap_inputs: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        quote_asset: z.ZodObject<{
                            chain: z.ZodLiteral<"Ethereum">;
                            asset: z.ZodLiteral<"USDC">;
                        }, "strip", z.ZodTypeAny, {
                            chain: "Ethereum";
                            asset: "USDC";
                        }, {
                            chain: "Ethereum";
                            asset: "USDC";
                        }>;
                    }, "strip", z.ZodTypeAny, {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    }, {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    }>;
                }, "strip", z.ZodTypeAny, {
                    DOT: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                }, {
                    DOT: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                }>;
                Arbitrum: z.ZodDefault<z.ZodObject<{
                    ETH: z.ZodDefault<z.ZodObject<{
                        limit_order_fee_hundredth_pips: z.ZodNumber;
                        range_order_fee_hundredth_pips: z.ZodNumber;
                        range_order_total_fees_earned: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        limit_order_total_fees_earned: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        range_total_swap_inputs: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        limit_total_swap_inputs: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        quote_asset: z.ZodObject<{
                            chain: z.ZodLiteral<"Ethereum">;
                            asset: z.ZodLiteral<"USDC">;
                        }, "strip", z.ZodTypeAny, {
                            chain: "Ethereum";
                            asset: "USDC";
                        }, {
                            chain: "Ethereum";
                            asset: "USDC";
                        }>;
                    }, "strip", z.ZodTypeAny, {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    }, {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    }>>;
                    USDC: z.ZodDefault<z.ZodObject<{
                        limit_order_fee_hundredth_pips: z.ZodNumber;
                        range_order_fee_hundredth_pips: z.ZodNumber;
                        range_order_total_fees_earned: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        limit_order_total_fees_earned: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        range_total_swap_inputs: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        limit_total_swap_inputs: z.ZodObject<{
                            base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                            quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        }, "strip", z.ZodTypeAny, {
                            base: bigint;
                            quote: bigint;
                        }, {
                            base: string;
                            quote: string;
                        }>;
                        quote_asset: z.ZodObject<{
                            chain: z.ZodLiteral<"Ethereum">;
                            asset: z.ZodLiteral<"USDC">;
                        }, "strip", z.ZodTypeAny, {
                            chain: "Ethereum";
                            asset: "USDC";
                        }, {
                            chain: "Ethereum";
                            asset: "USDC";
                        }>;
                    }, "strip", z.ZodTypeAny, {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    }, {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    }>>;
                }, "strip", z.ZodTypeAny, {
                    ETH: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    USDC: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                }, {
                    ETH?: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    } | undefined;
                    USDC?: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    } | undefined;
                }>>;
            }, "strip", z.ZodTypeAny, {
                Bitcoin: {
                    BTC: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
                Ethereum: {
                    ETH: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    FLIP: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    USDT: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
                Polkadot: {
                    DOT: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
                Arbitrum: {
                    ETH: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    USDC: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
            }, {
                Bitcoin: {
                    BTC: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
                Ethereum: {
                    ETH: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    FLIP: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    USDT: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
                Polkadot: {
                    DOT: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
                Arbitrum?: {
                    ETH?: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    } | undefined;
                    USDC?: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    } | undefined;
                } | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            fees: {
                Bitcoin: {
                    BTC: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
                Ethereum: {
                    ETH: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    FLIP: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    USDT: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
                Polkadot: {
                    DOT: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
                Arbitrum: {
                    ETH: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    USDC: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
            };
        }, {
            fees: {
                Bitcoin: {
                    BTC: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
                Ethereum: {
                    ETH: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    FLIP: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    USDT: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
                Polkadot: {
                    DOT: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
                Arbitrum?: {
                    ETH?: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    } | undefined;
                    USDC?: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    } | undefined;
                } | undefined;
            };
        }>;
    }, "strip", z.ZodTypeAny, {
        ingress_egress: Omit<{
            minimum_deposit_amounts: {
                Bitcoin: {
                    BTC: bigint;
                };
                Ethereum: {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                };
                Polkadot: {
                    DOT: bigint;
                };
                Arbitrum: {
                    ETH: bigint;
                    USDC: bigint;
                };
            };
            ingress_fees: {
                Bitcoin: {
                    BTC: bigint | null;
                };
                Ethereum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                    FLIP: bigint | null;
                    USDT: bigint | null;
                };
                Polkadot: {
                    DOT: bigint | null;
                };
                Arbitrum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                };
            };
            egress_fees: {
                Bitcoin: {
                    BTC: bigint | null;
                };
                Ethereum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                    FLIP: bigint | null;
                    USDT: bigint | null;
                };
                Polkadot: {
                    DOT: bigint | null;
                };
                Arbitrum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                };
            };
            witness_safety_margins: {
                Bitcoin: number | null;
                Ethereum: number | null;
                Polkadot: number | null;
                Arbitrum: number | null;
            };
            egress_dust_limits: {
                Bitcoin: {
                    BTC: bigint;
                };
                Ethereum: {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                };
                Polkadot: {
                    DOT: bigint;
                };
                Arbitrum: {
                    ETH: bigint;
                    USDC: bigint;
                };
            };
            channel_opening_fees: {
                Bitcoin: bigint;
                Ethereum: bigint;
                Polkadot: bigint;
                Arbitrum: bigint;
            };
        }, "egress_dust_limits"> & {
            readonly minimum_egress_amounts: {
                Bitcoin: {
                    BTC: bigint;
                };
                Ethereum: {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                };
                Polkadot: {
                    DOT: bigint;
                };
                Arbitrum: {
                    ETH: bigint;
                    USDC: bigint;
                };
            };
        };
        swapping: {
            maximum_swap_amounts: {
                Bitcoin: {
                    BTC: bigint | null;
                };
                Ethereum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                    FLIP: bigint | null;
                    USDT: bigint | null;
                };
                Polkadot: {
                    DOT: bigint | null;
                };
                Arbitrum: {
                    ETH: bigint | null;
                    USDC: bigint | null;
                };
            };
            network_fee_hundredth_pips: number;
        };
        funding: {
            redemption_tax: bigint;
            minimum_funding_amount: bigint;
        };
        pools: {
            fees: {
                Bitcoin: {
                    BTC: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
                Ethereum: {
                    ETH: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    FLIP: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    USDT: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
                Polkadot: {
                    DOT: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
                Arbitrum: {
                    ETH: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    USDC: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_order_total_fees_earned: {
                            base: bigint;
                            quote: bigint;
                        };
                        range_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        limit_total_swap_inputs: {
                            base: bigint;
                            quote: bigint;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
            };
        };
    }, {
        ingress_egress: {
            minimum_deposit_amounts: {
                Bitcoin: {
                    BTC: string | number;
                };
                Ethereum: {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                };
                Polkadot: {
                    DOT: string | number;
                };
                Arbitrum?: {
                    ETH?: string | number | undefined;
                    USDC?: string | number | undefined;
                } | undefined;
            };
            ingress_fees: {
                Bitcoin: {
                    BTC: string | number | null;
                };
                Ethereum: {
                    ETH: string | number | null;
                    USDC: string | number | null;
                    FLIP: string | number | null;
                    USDT: string | number | null;
                };
                Polkadot: {
                    DOT: string | number | null;
                };
                Arbitrum?: {
                    ETH?: string | number | null | undefined;
                    USDC?: string | number | null | undefined;
                } | undefined;
            };
            egress_fees: {
                Bitcoin: {
                    BTC: string | number | null;
                };
                Ethereum: {
                    ETH: string | number | null;
                    USDC: string | number | null;
                    FLIP: string | number | null;
                    USDT: string | number | null;
                };
                Polkadot: {
                    DOT: string | number | null;
                };
                Arbitrum?: {
                    ETH?: string | number | null | undefined;
                    USDC?: string | number | null | undefined;
                } | undefined;
            };
            witness_safety_margins: {
                Bitcoin: number | null;
                Ethereum: number | null;
                Polkadot: number | null;
                Arbitrum?: number | null | undefined;
            };
            egress_dust_limits: {
                Bitcoin: {
                    BTC: string | number;
                };
                Ethereum: {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                };
                Polkadot: {
                    DOT: string | number;
                };
                Arbitrum?: {
                    ETH?: string | number | undefined;
                    USDC?: string | number | undefined;
                } | undefined;
            };
            channel_opening_fees: {
                Bitcoin: string | number;
                Ethereum: string | number;
                Polkadot: string | number;
                Arbitrum?: string | number | undefined;
            };
        };
        swapping: {
            maximum_swap_amounts: {
                Bitcoin: {
                    BTC: string | number | null;
                };
                Ethereum: {
                    ETH: string | number | null;
                    USDC: string | number | null;
                    FLIP: string | number | null;
                    USDT: string | number | null;
                };
                Polkadot: {
                    DOT: string | number | null;
                };
                Arbitrum?: {
                    ETH?: string | number | null | undefined;
                    USDC?: string | number | null | undefined;
                } | undefined;
            };
            network_fee_hundredth_pips: number;
        };
        funding: {
            redemption_tax: string | number;
            minimum_funding_amount: string | number;
        };
        pools: {
            fees: {
                Bitcoin: {
                    BTC: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
                Ethereum: {
                    ETH: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    FLIP: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                    USDT: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
                Polkadot: {
                    DOT: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    };
                };
                Arbitrum?: {
                    ETH?: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    } | undefined;
                    USDC?: {
                        limit_order_fee_hundredth_pips: number;
                        range_order_fee_hundredth_pips: number;
                        range_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        limit_order_total_fees_earned: {
                            base: string;
                            quote: string;
                        };
                        range_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        limit_total_swap_inputs: {
                            base: string;
                            quote: string;
                        };
                        quote_asset: {
                            chain: "Ethereum";
                            asset: "USDC";
                        };
                    } | undefined;
                } | undefined;
            };
        };
    }>;
    readonly cf_funding_environment: z.ZodObject<{
        redemption_tax: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
        minimum_funding_amount: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
    }, "strip", z.ZodTypeAny, {
        redemption_tax: bigint;
        minimum_funding_amount: bigint;
    }, {
        redemption_tax: string | number;
        minimum_funding_amount: string | number;
    }>;
    readonly cf_ingress_egress_environment: z.ZodEffects<z.ZodObject<{
        minimum_deposit_amounts: z.ZodObject<{
            Bitcoin: z.ZodObject<{
                BTC: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            }, "strip", z.ZodTypeAny, {
                BTC: bigint;
            }, {
                BTC: string | number;
            }>;
            Ethereum: z.ZodObject<{
                ETH: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                USDC: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                FLIP: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                USDT: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            }, {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            }>;
            Polkadot: z.ZodObject<{
                DOT: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            }, "strip", z.ZodTypeAny, {
                DOT: bigint;
            }, {
                DOT: string | number;
            }>;
            Arbitrum: z.ZodDefault<z.ZodObject<{
                ETH: z.ZodDefault<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                USDC: z.ZodDefault<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint;
                USDC: bigint;
            }, {
                ETH?: string | number | undefined;
                USDC?: string | number | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Polkadot: {
                DOT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
        }, {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Polkadot: {
                DOT: string | number;
            };
            Arbitrum?: {
                ETH?: string | number | undefined;
                USDC?: string | number | undefined;
            } | undefined;
        }>;
        ingress_fees: z.ZodObject<{
            Bitcoin: z.ZodObject<{
                BTC: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
            }, "strip", z.ZodTypeAny, {
                BTC: bigint | null;
            }, {
                BTC: string | number | null;
            }>;
            Ethereum: z.ZodObject<{
                ETH: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                USDC: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                FLIP: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                USDT: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            }, {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            }>;
            Polkadot: z.ZodObject<{
                DOT: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
            }, "strip", z.ZodTypeAny, {
                DOT: bigint | null;
            }, {
                DOT: string | number | null;
            }>;
            Arbitrum: z.ZodDefault<z.ZodObject<{
                ETH: z.ZodDefault<z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>>;
                USDC: z.ZodDefault<z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint | null;
                USDC: bigint | null;
            }, {
                ETH?: string | number | null | undefined;
                USDC?: string | number | null | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Polkadot: {
                DOT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
        }, {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Polkadot: {
                DOT: string | number | null;
            };
            Arbitrum?: {
                ETH?: string | number | null | undefined;
                USDC?: string | number | null | undefined;
            } | undefined;
        }>;
        egress_fees: z.ZodObject<{
            Bitcoin: z.ZodObject<{
                BTC: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
            }, "strip", z.ZodTypeAny, {
                BTC: bigint | null;
            }, {
                BTC: string | number | null;
            }>;
            Ethereum: z.ZodObject<{
                ETH: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                USDC: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                FLIP: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                USDT: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            }, {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            }>;
            Polkadot: z.ZodObject<{
                DOT: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
            }, "strip", z.ZodTypeAny, {
                DOT: bigint | null;
            }, {
                DOT: string | number | null;
            }>;
            Arbitrum: z.ZodDefault<z.ZodObject<{
                ETH: z.ZodDefault<z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>>;
                USDC: z.ZodDefault<z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint | null;
                USDC: bigint | null;
            }, {
                ETH?: string | number | null | undefined;
                USDC?: string | number | null | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Polkadot: {
                DOT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
        }, {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Polkadot: {
                DOT: string | number | null;
            };
            Arbitrum?: {
                ETH?: string | number | null | undefined;
                USDC?: string | number | null | undefined;
            } | undefined;
        }>;
        witness_safety_margins: z.ZodObject<{
            Bitcoin: z.ZodNullable<z.ZodNumber>;
            Ethereum: z.ZodNullable<z.ZodNumber>;
            Polkadot: z.ZodNullable<z.ZodNumber>;
            Arbitrum: z.ZodDefault<z.ZodNullable<z.ZodNumber>>;
        }, "strip", z.ZodTypeAny, {
            Bitcoin: number | null;
            Ethereum: number | null;
            Polkadot: number | null;
            Arbitrum: number | null;
        }, {
            Bitcoin: number | null;
            Ethereum: number | null;
            Polkadot: number | null;
            Arbitrum?: number | null | undefined;
        }>;
        egress_dust_limits: z.ZodObject<{
            Bitcoin: z.ZodObject<{
                BTC: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            }, "strip", z.ZodTypeAny, {
                BTC: bigint;
            }, {
                BTC: string | number;
            }>;
            Ethereum: z.ZodObject<{
                ETH: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                USDC: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                FLIP: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                USDT: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            }, {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            }>;
            Polkadot: z.ZodObject<{
                DOT: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            }, "strip", z.ZodTypeAny, {
                DOT: bigint;
            }, {
                DOT: string | number;
            }>;
            Arbitrum: z.ZodDefault<z.ZodObject<{
                ETH: z.ZodDefault<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                USDC: z.ZodDefault<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint;
                USDC: bigint;
            }, {
                ETH?: string | number | undefined;
                USDC?: string | number | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Polkadot: {
                DOT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
        }, {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Polkadot: {
                DOT: string | number;
            };
            Arbitrum?: {
                ETH?: string | number | undefined;
                USDC?: string | number | undefined;
            } | undefined;
        }>;
        channel_opening_fees: z.ZodObject<{
            Bitcoin: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            Ethereum: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            Polkadot: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            Arbitrum: z.ZodDefault<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
        }, "strip", z.ZodTypeAny, {
            Bitcoin: bigint;
            Ethereum: bigint;
            Polkadot: bigint;
            Arbitrum: bigint;
        }, {
            Bitcoin: string | number;
            Ethereum: string | number;
            Polkadot: string | number;
            Arbitrum?: string | number | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        minimum_deposit_amounts: {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Polkadot: {
                DOT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
        };
        ingress_fees: {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Polkadot: {
                DOT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
        };
        egress_fees: {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Polkadot: {
                DOT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
        };
        witness_safety_margins: {
            Bitcoin: number | null;
            Ethereum: number | null;
            Polkadot: number | null;
            Arbitrum: number | null;
        };
        egress_dust_limits: {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Polkadot: {
                DOT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
        };
        channel_opening_fees: {
            Bitcoin: bigint;
            Ethereum: bigint;
            Polkadot: bigint;
            Arbitrum: bigint;
        };
    }, {
        minimum_deposit_amounts: {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Polkadot: {
                DOT: string | number;
            };
            Arbitrum?: {
                ETH?: string | number | undefined;
                USDC?: string | number | undefined;
            } | undefined;
        };
        ingress_fees: {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Polkadot: {
                DOT: string | number | null;
            };
            Arbitrum?: {
                ETH?: string | number | null | undefined;
                USDC?: string | number | null | undefined;
            } | undefined;
        };
        egress_fees: {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Polkadot: {
                DOT: string | number | null;
            };
            Arbitrum?: {
                ETH?: string | number | null | undefined;
                USDC?: string | number | null | undefined;
            } | undefined;
        };
        witness_safety_margins: {
            Bitcoin: number | null;
            Ethereum: number | null;
            Polkadot: number | null;
            Arbitrum?: number | null | undefined;
        };
        egress_dust_limits: {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Polkadot: {
                DOT: string | number;
            };
            Arbitrum?: {
                ETH?: string | number | undefined;
                USDC?: string | number | undefined;
            } | undefined;
        };
        channel_opening_fees: {
            Bitcoin: string | number;
            Ethereum: string | number;
            Polkadot: string | number;
            Arbitrum?: string | number | undefined;
        };
    }>, Omit<{
        minimum_deposit_amounts: {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Polkadot: {
                DOT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
        };
        ingress_fees: {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Polkadot: {
                DOT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
        };
        egress_fees: {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Polkadot: {
                DOT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
        };
        witness_safety_margins: {
            Bitcoin: number | null;
            Ethereum: number | null;
            Polkadot: number | null;
            Arbitrum: number | null;
        };
        egress_dust_limits: {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Polkadot: {
                DOT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
        };
        channel_opening_fees: {
            Bitcoin: bigint;
            Ethereum: bigint;
            Polkadot: bigint;
            Arbitrum: bigint;
        };
    }, "egress_dust_limits"> & {
        readonly minimum_egress_amounts: {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Polkadot: {
                DOT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
        };
    }, {
        minimum_deposit_amounts: {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Polkadot: {
                DOT: string | number;
            };
            Arbitrum?: {
                ETH?: string | number | undefined;
                USDC?: string | number | undefined;
            } | undefined;
        };
        ingress_fees: {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Polkadot: {
                DOT: string | number | null;
            };
            Arbitrum?: {
                ETH?: string | number | null | undefined;
                USDC?: string | number | null | undefined;
            } | undefined;
        };
        egress_fees: {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Polkadot: {
                DOT: string | number | null;
            };
            Arbitrum?: {
                ETH?: string | number | null | undefined;
                USDC?: string | number | null | undefined;
            } | undefined;
        };
        witness_safety_margins: {
            Bitcoin: number | null;
            Ethereum: number | null;
            Polkadot: number | null;
            Arbitrum?: number | null | undefined;
        };
        egress_dust_limits: {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Polkadot: {
                DOT: string | number;
            };
            Arbitrum?: {
                ETH?: string | number | undefined;
                USDC?: string | number | undefined;
            } | undefined;
        };
        channel_opening_fees: {
            Bitcoin: string | number;
            Ethereum: string | number;
            Polkadot: string | number;
            Arbitrum?: string | number | undefined;
        };
    }>;
    readonly cf_pool_orders: z.ZodObject<{
        limit_orders: z.ZodObject<{
            asks: z.ZodArray<z.ZodEffects<z.ZodObject<{
                id: z.ZodEffects<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>, string, string | number>;
                tick: z.ZodNumber;
                sell_amount: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                fees_earned: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                original_sell_amount: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                lp: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                tick: number;
                sell_amount: bigint;
                fees_earned: bigint;
                original_sell_amount: bigint;
                lp: string;
            }, {
                id: string | number;
                tick: number;
                sell_amount: string | number;
                fees_earned: string | number;
                original_sell_amount: string | number;
                lp: string;
            }>, {
                type: "ask";
                id: string;
                tick: number;
                sell_amount: bigint;
                fees_earned: bigint;
                original_sell_amount: bigint;
                lp: string;
            }, {
                id: string | number;
                tick: number;
                sell_amount: string | number;
                fees_earned: string | number;
                original_sell_amount: string | number;
                lp: string;
            }>, "many">;
            bids: z.ZodArray<z.ZodEffects<z.ZodObject<{
                id: z.ZodEffects<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>, string, string | number>;
                tick: z.ZodNumber;
                sell_amount: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                fees_earned: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                original_sell_amount: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                lp: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                tick: number;
                sell_amount: bigint;
                fees_earned: bigint;
                original_sell_amount: bigint;
                lp: string;
            }, {
                id: string | number;
                tick: number;
                sell_amount: string | number;
                fees_earned: string | number;
                original_sell_amount: string | number;
                lp: string;
            }>, {
                type: "bid";
                id: string;
                tick: number;
                sell_amount: bigint;
                fees_earned: bigint;
                original_sell_amount: bigint;
                lp: string;
            }, {
                id: string | number;
                tick: number;
                sell_amount: string | number;
                fees_earned: string | number;
                original_sell_amount: string | number;
                lp: string;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            asks: {
                type: "ask";
                id: string;
                tick: number;
                sell_amount: bigint;
                fees_earned: bigint;
                original_sell_amount: bigint;
                lp: string;
            }[];
            bids: {
                type: "bid";
                id: string;
                tick: number;
                sell_amount: bigint;
                fees_earned: bigint;
                original_sell_amount: bigint;
                lp: string;
            }[];
        }, {
            asks: {
                id: string | number;
                tick: number;
                sell_amount: string | number;
                fees_earned: string | number;
                original_sell_amount: string | number;
                lp: string;
            }[];
            bids: {
                id: string | number;
                tick: number;
                sell_amount: string | number;
                fees_earned: string | number;
                original_sell_amount: string | number;
                lp: string;
            }[];
        }>;
        range_orders: z.ZodArray<z.ZodEffects<z.ZodObject<{
            id: z.ZodEffects<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>, string, string | number>;
            range: z.ZodObject<{
                start: z.ZodNumber;
                end: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                start: number;
                end: number;
            }, {
                start: number;
                end: number;
            }>;
            liquidity: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            fees_earned: z.ZodObject<{
                base: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
                quote: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
            }, "strip", z.ZodTypeAny, {
                base: bigint;
                quote: bigint;
            }, {
                base: string | number;
                quote: string | number;
            }>;
            lp: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            fees_earned: {
                base: bigint;
                quote: bigint;
            };
            lp: string;
            range: {
                start: number;
                end: number;
            };
            liquidity: bigint;
        }, {
            id: string | number;
            fees_earned: {
                base: string | number;
                quote: string | number;
            };
            lp: string;
            range: {
                start: number;
                end: number;
            };
            liquidity: string | number;
        }>, {
            type: "range";
            id: string;
            fees_earned: {
                base: bigint;
                quote: bigint;
            };
            lp: string;
            range: {
                start: number;
                end: number;
            };
            liquidity: bigint;
        }, {
            id: string | number;
            fees_earned: {
                base: string | number;
                quote: string | number;
            };
            lp: string;
            range: {
                start: number;
                end: number;
            };
            liquidity: string | number;
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        limit_orders: {
            asks: {
                type: "ask";
                id: string;
                tick: number;
                sell_amount: bigint;
                fees_earned: bigint;
                original_sell_amount: bigint;
                lp: string;
            }[];
            bids: {
                type: "bid";
                id: string;
                tick: number;
                sell_amount: bigint;
                fees_earned: bigint;
                original_sell_amount: bigint;
                lp: string;
            }[];
        };
        range_orders: {
            type: "range";
            id: string;
            fees_earned: {
                base: bigint;
                quote: bigint;
            };
            lp: string;
            range: {
                start: number;
                end: number;
            };
            liquidity: bigint;
        }[];
    }, {
        limit_orders: {
            asks: {
                id: string | number;
                tick: number;
                sell_amount: string | number;
                fees_earned: string | number;
                original_sell_amount: string | number;
                lp: string;
            }[];
            bids: {
                id: string | number;
                tick: number;
                sell_amount: string | number;
                fees_earned: string | number;
                original_sell_amount: string | number;
                lp: string;
            }[];
        };
        range_orders: {
            id: string | number;
            fees_earned: {
                base: string | number;
                quote: string | number;
            };
            lp: string;
            range: {
                start: number;
                end: number;
            };
            liquidity: string | number;
        }[];
    }>;
    readonly cf_pool_price_v2: z.ZodObject<{
        sell: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
        buy: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
        range_order: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
        base_asset: z.ZodUnion<[z.ZodObject<{
            chain: z.ZodLiteral<"Bitcoin">;
            asset: z.ZodLiteral<"BTC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Bitcoin";
            asset: "BTC";
        }, {
            chain: "Bitcoin";
            asset: "BTC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Polkadot">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Polkadot";
            asset: "DOT";
        }, {
            chain: "Polkadot";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"FLIP">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "FLIP";
        }, {
            chain: "Ethereum";
            asset: "FLIP";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "ETH";
        }, {
            chain: "Ethereum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDC";
        }, {
            chain: "Ethereum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDT";
        }, {
            chain: "Ethereum";
            asset: "USDT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "ETH";
        }, {
            chain: "Arbitrum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "USDC";
        }, {
            chain: "Arbitrum";
            asset: "USDC";
        }>]>;
        quote_asset: z.ZodUnion<[z.ZodObject<{
            chain: z.ZodLiteral<"Bitcoin">;
            asset: z.ZodLiteral<"BTC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Bitcoin";
            asset: "BTC";
        }, {
            chain: "Bitcoin";
            asset: "BTC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Polkadot">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Polkadot";
            asset: "DOT";
        }, {
            chain: "Polkadot";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"FLIP">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "FLIP";
        }, {
            chain: "Ethereum";
            asset: "FLIP";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "ETH";
        }, {
            chain: "Ethereum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDC";
        }, {
            chain: "Ethereum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDT";
        }, {
            chain: "Ethereum";
            asset: "USDT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "ETH";
        }, {
            chain: "Arbitrum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "USDC";
        }, {
            chain: "Arbitrum";
            asset: "USDC";
        }>]>;
    }, "strip", z.ZodTypeAny, {
        quote_asset: {
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        };
        sell: bigint | null;
        buy: bigint | null;
        range_order: bigint;
        base_asset: {
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        };
    }, {
        quote_asset: {
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        };
        sell: string | number | null;
        buy: string | number | null;
        range_order: string | number;
        base_asset: {
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        };
    }>;
    readonly cf_pools_environment: z.ZodObject<{
        fees: z.ZodObject<{
            Bitcoin: z.ZodObject<{
                BTC: z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>;
            }, "strip", z.ZodTypeAny, {
                BTC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            }, {
                BTC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            }>;
            Ethereum: z.ZodObject<{
                ETH: z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>;
                FLIP: z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>;
                USDT: z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>;
            }, "strip", z.ZodTypeAny, {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
                FLIP: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            }, {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
                FLIP: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            }>;
            Polkadot: z.ZodObject<{
                DOT: z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>;
            }, "strip", z.ZodTypeAny, {
                DOT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            }, {
                DOT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            }>;
            Arbitrum: z.ZodDefault<z.ZodObject<{
                ETH: z.ZodDefault<z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>>;
                USDC: z.ZodDefault<z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>>;
            }, "strip", z.ZodTypeAny, {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            }, {
                ETH?: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | undefined;
                USDC?: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            Bitcoin: {
                BTC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            };
            Ethereum: {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
                FLIP: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            };
            Polkadot: {
                DOT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            };
            Arbitrum: {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            };
        }, {
            Bitcoin: {
                BTC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            };
            Ethereum: {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
                FLIP: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            };
            Polkadot: {
                DOT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            };
            Arbitrum?: {
                ETH?: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | undefined;
                USDC?: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | undefined;
            } | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        fees: {
            Bitcoin: {
                BTC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            };
            Ethereum: {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
                FLIP: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            };
            Polkadot: {
                DOT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            };
            Arbitrum: {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            };
        };
    }, {
        fees: {
            Bitcoin: {
                BTC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            };
            Ethereum: {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
                FLIP: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            };
            Polkadot: {
                DOT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                };
            };
            Arbitrum?: {
                ETH?: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | undefined;
                USDC?: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | undefined;
            } | undefined;
        };
    }>;
    readonly cf_supported_assets: z.ZodEffects<z.ZodArray<z.ZodObject<{
        chain: z.ZodString;
        asset: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        chain: string;
        asset: string;
    }, {
        chain: string;
        asset: string;
    }>, "many">, ({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    })[], {
        chain: string;
        asset: string;
    }[]>;
    readonly cf_swap_rate: z.ZodObject<{
        intermediary: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
        output: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
    }, "strip", z.ZodTypeAny, {
        intermediary: bigint | null;
        output: bigint;
    }, {
        intermediary: string | number | null;
        output: string | number;
    }>;
    readonly cf_swap_rate_v2: z.ZodObject<{
        egress_fee: z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
            chain: z.ZodLiteral<"Bitcoin">;
            asset: z.ZodLiteral<"BTC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Bitcoin";
            asset: "BTC";
        }, {
            chain: "Bitcoin";
            asset: "BTC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Polkadot">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Polkadot";
            asset: "DOT";
        }, {
            chain: "Polkadot";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"FLIP">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "FLIP";
        }, {
            chain: "Ethereum";
            asset: "FLIP";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "ETH";
        }, {
            chain: "Ethereum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDC";
        }, {
            chain: "Ethereum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDT";
        }, {
            chain: "Ethereum";
            asset: "USDT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "ETH";
        }, {
            chain: "Arbitrum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "USDC";
        }, {
            chain: "Arbitrum";
            asset: "USDC";
        }>]>, z.ZodObject<{
            amount: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
        }, "strip", z.ZodTypeAny, {
            amount: bigint;
        }, {
            amount: string | number;
        }>>;
        ingress_fee: z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
            chain: z.ZodLiteral<"Bitcoin">;
            asset: z.ZodLiteral<"BTC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Bitcoin";
            asset: "BTC";
        }, {
            chain: "Bitcoin";
            asset: "BTC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Polkadot">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Polkadot";
            asset: "DOT";
        }, {
            chain: "Polkadot";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"FLIP">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "FLIP";
        }, {
            chain: "Ethereum";
            asset: "FLIP";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "ETH";
        }, {
            chain: "Ethereum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDC";
        }, {
            chain: "Ethereum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDT";
        }, {
            chain: "Ethereum";
            asset: "USDT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "ETH";
        }, {
            chain: "Arbitrum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "USDC";
        }, {
            chain: "Arbitrum";
            asset: "USDC";
        }>]>, z.ZodObject<{
            amount: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
        }, "strip", z.ZodTypeAny, {
            amount: bigint;
        }, {
            amount: string | number;
        }>>;
        intermediary: z.ZodNullable<z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>>;
        network_fee: z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
            chain: z.ZodLiteral<"Bitcoin">;
            asset: z.ZodLiteral<"BTC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Bitcoin";
            asset: "BTC";
        }, {
            chain: "Bitcoin";
            asset: "BTC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Polkadot">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Polkadot";
            asset: "DOT";
        }, {
            chain: "Polkadot";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"FLIP">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "FLIP";
        }, {
            chain: "Ethereum";
            asset: "FLIP";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "ETH";
        }, {
            chain: "Ethereum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDC";
        }, {
            chain: "Ethereum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDT";
        }, {
            chain: "Ethereum";
            asset: "USDT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "ETH";
        }, {
            chain: "Arbitrum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "USDC";
        }, {
            chain: "Arbitrum";
            asset: "USDC";
        }>]>, z.ZodObject<{
            amount: z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>;
        }, "strip", z.ZodTypeAny, {
            amount: bigint;
        }, {
            amount: string | number;
        }>>;
        output: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
    }, "strip", z.ZodTypeAny, {
        intermediary: bigint | null;
        output: bigint;
        egress_fee: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        }) & {
            amount: bigint;
        };
        ingress_fee: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        }) & {
            amount: bigint;
        };
        network_fee: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        }) & {
            amount: bigint;
        };
    }, {
        intermediary: string | null;
        output: string;
        egress_fee: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        }) & {
            amount: string | number;
        };
        ingress_fee: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        }) & {
            amount: string | number;
        };
        network_fee: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        }) & {
            amount: string | number;
        };
    }>;
    readonly cf_swapping_environment: z.ZodObject<{
        maximum_swap_amounts: z.ZodObject<{
            Bitcoin: z.ZodObject<{
                BTC: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
            }, "strip", z.ZodTypeAny, {
                BTC: bigint | null;
            }, {
                BTC: string | number | null;
            }>;
            Ethereum: z.ZodObject<{
                ETH: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                USDC: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                FLIP: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
                USDT: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            }, {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            }>;
            Polkadot: z.ZodObject<{
                DOT: z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>;
            }, "strip", z.ZodTypeAny, {
                DOT: bigint | null;
            }, {
                DOT: string | number | null;
            }>;
            Arbitrum: z.ZodDefault<z.ZodObject<{
                ETH: z.ZodDefault<z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>>;
                USDC: z.ZodDefault<z.ZodNullable<z.ZodUnion<[z.ZodEffects<z.ZodNumber, bigint, number>, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>]>>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint | null;
                USDC: bigint | null;
            }, {
                ETH?: string | number | null | undefined;
                USDC?: string | number | null | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Polkadot: {
                DOT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
        }, {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Polkadot: {
                DOT: string | number | null;
            };
            Arbitrum?: {
                ETH?: string | number | null | undefined;
                USDC?: string | number | null | undefined;
            } | undefined;
        }>;
        network_fee_hundredth_pips: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        maximum_swap_amounts: {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Polkadot: {
                DOT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
        };
        network_fee_hundredth_pips: number;
    }, {
        maximum_swap_amounts: {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Polkadot: {
                DOT: string | number | null;
            };
            Arbitrum?: {
                ETH?: string | number | null | undefined;
                USDC?: string | number | null | undefined;
            } | undefined;
        };
        network_fee_hundredth_pips: number;
    }>;
    readonly chain_getBlockHash: z.ZodEffects<z.ZodString, `0x${string}`, string>;
    readonly cf_boost_pool_details: z.ZodArray<z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>]>, z.ZodObject<{
        fee_tier: z.ZodNumber;
        available_amounts: z.ZodArray<z.ZodObject<{
            account_id: z.ZodString;
            amount: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
        }, "strip", z.ZodTypeAny, {
            amount: bigint;
            account_id: string;
        }, {
            amount: string;
            account_id: string;
        }>, "many">;
        deposits_pending_finalization: z.ZodArray<z.ZodObject<{
            deposit_id: z.ZodEffects<z.ZodNumber, bigint, number>;
            owed_amounts: z.ZodArray<z.ZodObject<{
                account_id: z.ZodString;
                amount: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
            }, "strip", z.ZodTypeAny, {
                amount: bigint;
                account_id: string;
            }, {
                amount: string;
                account_id: string;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            deposit_id: bigint;
            owed_amounts: {
                amount: bigint;
                account_id: string;
            }[];
        }, {
            deposit_id: number;
            owed_amounts: {
                amount: string;
                account_id: string;
            }[];
        }>, "many">;
        pending_withdrawals: z.ZodArray<z.ZodObject<{
            account_id: z.ZodString;
            pending_deposits: z.ZodArray<z.ZodBigInt, "many">;
        }, "strip", z.ZodTypeAny, {
            account_id: string;
            pending_deposits: bigint[];
        }, {
            account_id: string;
            pending_deposits: bigint[];
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        fee_tier: number;
        available_amounts: {
            amount: bigint;
            account_id: string;
        }[];
        deposits_pending_finalization: {
            deposit_id: bigint;
            owed_amounts: {
                amount: bigint;
                account_id: string;
            }[];
        }[];
        pending_withdrawals: {
            account_id: string;
            pending_deposits: bigint[];
        }[];
    }, {
        fee_tier: number;
        available_amounts: {
            amount: string;
            account_id: string;
        }[];
        deposits_pending_finalization: {
            deposit_id: number;
            owed_amounts: {
                amount: string;
                account_id: string;
            }[];
        }[];
        pending_withdrawals: {
            account_id: string;
            pending_deposits: bigint[];
        }[];
    }>>, "many">;
    readonly cf_boost_pool_pending_fees: z.ZodArray<z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>]>, z.ZodObject<{
        fee_tier: z.ZodNumber;
        pending_fees: z.ZodArray<z.ZodObject<{
            deposit_id: z.ZodEffects<z.ZodNumber, bigint, number>;
            fees: z.ZodArray<z.ZodObject<{
                account_id: z.ZodString;
                amount: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
            }, "strip", z.ZodTypeAny, {
                amount: bigint;
                account_id: string;
            }, {
                amount: string;
                account_id: string;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            fees: {
                amount: bigint;
                account_id: string;
            }[];
            deposit_id: bigint;
        }, {
            fees: {
                amount: string;
                account_id: string;
            }[];
            deposit_id: number;
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        fee_tier: number;
        pending_fees: {
            fees: {
                amount: bigint;
                account_id: string;
            }[];
            deposit_id: bigint;
        }[];
    }, {
        fee_tier: number;
        pending_fees: {
            fees: {
                amount: string;
                account_id: string;
            }[];
            deposit_id: number;
        }[];
    }>>, "many">;
    readonly state_getMetadata: z.ZodEffects<z.ZodString, `0x${string}`, string>;
    readonly state_getRuntimeVersion: z.ZodObject<{
        specName: z.ZodString;
        implName: z.ZodString;
        authoringVersion: z.ZodNumber;
        specVersion: z.ZodNumber;
        implVersion: z.ZodNumber;
        apis: z.ZodArray<z.ZodTuple<[z.ZodEffects<z.ZodString, `0x${string}`, string>, z.ZodNumber], null>, "many">;
        transactionVersion: z.ZodNumber;
        stateVersion: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        specName: string;
        implName: string;
        authoringVersion: number;
        specVersion: number;
        implVersion: number;
        apis: [`0x${string}`, number][];
        transactionVersion: number;
        stateVersion: number;
    }, {
        specName: string;
        implName: string;
        authoringVersion: number;
        specVersion: number;
        implVersion: number;
        apis: [string, number][];
        transactionVersion: number;
        stateVersion: number;
    }>;
};
type RpcMethod = keyof RpcRequest;
type RpcResponse<T extends RpcMethod> = z.input<(typeof rpcResult)[T]>;
type RpcResult<T extends RpcMethod> = z.output<(typeof rpcResult)[T]>;
type JsonRpcRequest<T extends RpcMethod> = {
    jsonrpc: '2.0';
    id: string;
    method: T;
    params: RpcRequest[T];
};
type JsonRpcResponse = z.output<typeof rpcResponse>;

export { type Chain, type JsonRpcRequest, type JsonRpcResponse, type RpcMethod, type RpcRequest, type RpcResponse, type RpcResult, rpcResponse, rpcResult };
