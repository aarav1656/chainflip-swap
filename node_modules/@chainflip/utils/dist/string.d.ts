declare const toUpperCase: <const T extends string>(str: T) => Uppercase<T>;
declare const toLowerCase: <const T extends string>(str: T) => Lowercase<T>;
type Split<T extends string, D extends string> = T extends `${infer L}${D}${infer R}` ? [L, ...Split<R, D>] : [T];
declare const split: <const T extends string, D extends string>(str: T, delimiter: D) => Split<T, D>;
declare const capitalize: <const T extends string>(str: T) => Capitalize<T>;
declare const uncapitalize: <const T extends string>(str: T) => Uncapitalize<T>;
declare const isHex: (str: string) => str is `0x${string}`;

export { capitalize, isHex, split, toLowerCase, toUpperCase, uncapitalize };
